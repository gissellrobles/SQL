--For this project, I downloaded Spotify data from Kaggle.
--Then I created a table to insert Spotify data into.
--Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

--Then I inserted the Spotify Data .csv into the table.

--Next, I explored the data using the following SQL. 

--Top 10 Artists by Popularity
SELECT distinct artist_name, AVG(popularity) AS avg_popularity
FROM BIT_DB.Spotifydata  
GROUP BY artist_name
ORDER BY avg_popularity desc
LIMIT 10;

--Top 5 Energy Tracks
SELECT distinct track_name, artist_name, popularity, energy
FROM BIT_DB.Spotifydata
WHERE energy > 0.8
GROUP BY track_name
ORDER BY popularity desc
LIMIT 5;

--Average Duration by Time Singature
SELECT time_signature, AVG(duration_ms) AS avg_duration
FROM BIT_DB.Spotifydata
GROUP BY time_signature;

--The Longest and Shortest Track
SELECT track_name, artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms DESC
LIMIT 1;

SELECT track_name, artist_name, duration_ms
FROM BIT_DB.Spotifydata
ORDER BY duration_ms ASC
LIMIT 1;

--Top 5 Most Influential Artists
SELECT artist_name, COUNT(*) AS track_count
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY track_count DESC
LIMIT 5;
